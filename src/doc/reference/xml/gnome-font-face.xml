<refentry id="libgnomeprint-gnome-font-face">
<refmeta>
<refentrytitle role="top_of_page" id="libgnomeprint-gnome-font-face.top_of_page">gnome-font-face</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEPRINT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-font-face</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libgnomeprint-gnome-font-face.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="gnome-font-face-ref">gnome_font_face_ref</link>                 (f)
#define             <link linkend="gnome-font-face-unref">gnome_font_face_unref</link>               (f)
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find">gnome_font_face_find</link>                (const <link linkend="guchar">guchar</link> *name);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-closest">gnome_font_face_find_closest</link>        (const <link linkend="guchar">guchar</link> *name);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-closest-from-weight-slant">gnome_font_face_find_closest_from_weight_slant</link>
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                                         <link linkend="gboolean">gboolean</link> italic);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-closest-from-pango-font">gnome_font_face_find_closest_from_pango_font</link>
                                                        (<link linkend="PangoFont">PangoFont</link> *pfont);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-closest-from-pango-description">gnome_font_face_find_closest_from_pango_description</link>
                                                        (const <link linkend="PangoFontDescription">PangoFontDescription</link> *desc);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-from-family-and-style">gnome_font_face_find_from_family_and_style</link>
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         const <link linkend="guchar">guchar</link> *style);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-face-find-from-filename">gnome_font_face_find_from_filename</link>  (const <link linkend="guchar">guchar</link> *filename,
                                                         <link linkend="gint">gint</link> index_);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-face-get-font">gnome_font_face_get_font</link>            (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gdouble">gdouble</link> size,
                                                         <link linkend="gdouble">gdouble</link> xres,
                                                         <link linkend="gdouble">gdouble</link> yres);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-face-get-font-default">gnome_font_face_get_font_default</link>    (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gdouble">gdouble</link> size);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-name">gnome_font_face_get_name</link>            (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-family-name">gnome_font_face_get_family_name</link>     (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-species-name">gnome_font_face_get_species_name</link>    (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-ps-name">gnome_font_face_get_ps_name</link>         (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gint">gint</link>                <link linkend="gnome-font-face-get-num-glyphs">gnome_font_face_get_num_glyphs</link>      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gint">gint</link>                <link linkend="gnome-font-face-lookup-default">gnome_font_face_lookup_default</link>      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> unicode);
const <link linkend="ArtDRect">ArtDRect</link> *    <link linkend="gnome-font-face-get-stdbbox">gnome_font_face_get_stdbbox</link>         (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="ArtDRect">ArtDRect</link> *          <link linkend="gnome-font-face-get-glyph-stdbbox">gnome_font_face_get_glyph_stdbbox</link>   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtDRect">ArtDRect</link> *bbox);
<link linkend="ArtPoint">ArtPoint</link> *          <link linkend="gnome-font-face-get-glyph-stdadvance">gnome_font_face_get_glyph_stdadvance</link>
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtPoint">ArtPoint</link> *advance);
const <link linkend="ArtBpath">ArtBpath</link> *    <link linkend="gnome-font-face-get-glyph-stdoutline">gnome_font_face_get_glyph_stdoutline</link>
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);
<link linkend="ArtPoint">ArtPoint</link> *          <link linkend="gnome-font-face-get-glyph-stdkerning">gnome_font_face_get_glyph_stdkerning</link>
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph0,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="ArtPoint">ArtPoint</link> *kerning);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-sample">gnome_font_face_get_sample</link>          (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="GnomeFontWeight">GnomeFontWeight</link>     <link linkend="gnome-font-face-get-weight-code">gnome_font_face_get_weight_code</link>     (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-font-face-is-italic">gnome_font_face_is_italic</link>           (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-font-face-is-fixed-width">gnome_font_face_is_fixed_width</link>      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-ascender">gnome_font_face_get_ascender</link>        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-descender">gnome_font_face_get_descender</link>       (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-underline-position">gnome_font_face_get_underline_position</link>
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-underline-thickness">gnome_font_face_get_underline_thickness</link>
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-glyph-width">gnome_font_face_get_glyph_width</link>     (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-face-get-glyph-kerning">gnome_font_face_get_glyph_kerning</link>   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="gint">gint</link> glyph2);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-face-get-glyph-ps-name">gnome_font_face_get_glyph_ps_name</link>   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgnomeprint-gnome-font-face.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libgnomeprint-gnome-font-face.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gnome-font-face-ref" role="macro">
<title>gnome_font_face_ref()</title>
<indexterm zone="gnome-font-face-ref"><primary sortas="gnome_font_face_ref">gnome_font_face_ref</primary></indexterm><programlisting>#define             gnome_font_face_ref(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-unref" role="macro">
<title>gnome_font_face_unref()</title>
<indexterm zone="gnome-font-face-unref"><primary sortas="gnome_font_face_unref">gnome_font_face_unref</primary></indexterm><programlisting>#define             gnome_font_face_unref(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find" role="function">
<title>gnome_font_face_find ()</title>
<indexterm zone="gnome-font-face-find"><primary sortas="gnome_font_face_find">gnome_font_face_find</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find                (const <link linkend="guchar">guchar</link> *name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-closest" role="function">
<title>gnome_font_face_find_closest ()</title>
<indexterm zone="gnome-font-face-find-closest"><primary sortas="gnome_font_face_find_closest">gnome_font_face_find_closest</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_closest        (const <link linkend="guchar">guchar</link> *name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-closest-from-weight-slant" role="function">
<title>gnome_font_face_find_closest_from_weight_slant ()</title>
<indexterm zone="gnome-font-face-find-closest-from-weight-slant"><primary sortas="gnome_font_face_find_closest_from_weight_slant">gnome_font_face_find_closest_from_weight_slant</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_closest_from_weight_slant
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                                         <link linkend="gboolean">gboolean</link> italic);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weight</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>italic</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-closest-from-pango-font" role="function">
<title>gnome_font_face_find_closest_from_pango_font ()</title>
<indexterm zone="gnome-font-face-find-closest-from-pango-font"><primary sortas="gnome_font_face_find_closest_from_pango_font">gnome_font_face_find_closest_from_pango_font</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_closest_from_pango_font
                                                        (<link linkend="PangoFont">PangoFont</link> *pfont);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pfont</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-closest-from-pango-description" role="function">
<title>gnome_font_face_find_closest_from_pango_description ()</title>
<indexterm zone="gnome-font-face-find-closest-from-pango-description"><primary sortas="gnome_font_face_find_closest_from_pango_description">gnome_font_face_find_closest_from_pango_description</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_closest_from_pango_description
                                                        (const <link linkend="PangoFontDescription">PangoFontDescription</link> *desc);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>desc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-from-family-and-style" role="function">
<title>gnome_font_face_find_from_family_and_style ()</title>
<indexterm zone="gnome-font-face-find-from-family-and-style"><primary sortas="gnome_font_face_find_from_family_and_style">gnome_font_face_find_from_family_and_style</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_from_family_and_style
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         const <link linkend="guchar">guchar</link> *style);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>style</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-find-from-filename" role="function">
<title>gnome_font_face_find_from_filename ()</title>
<indexterm zone="gnome-font-face-find-from-filename"><primary sortas="gnome_font_face_find_from_filename">gnome_font_face_find_from_filename</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_face_find_from_filename  (const <link linkend="guchar">guchar</link> *filename,
                                                         <link linkend="gint">gint</link> index_);</programlisting>
<para>
Looks up the <link linkend="GnomeFontFace"><type>GnomeFontFace</type></link> for a particular pair of filename and
index of the font within the file. The font must already be within
the system font database; this can't be used to access arbitrary
fonts on disk.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> filename of a font face in the system font database
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index_</parameter>&#160;:</term>
<listitem><simpara> index of the face within <parameter>filename</parameter>. (Font formats such as
         TTC/TrueType Collections can have multiple fonts within
         a single file.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the matching <link linkend="GnomeFontFace"><type>GnomeFontFace</type></link>, if any, otherwise <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-font" role="function">
<title>gnome_font_face_get_font ()</title>
<indexterm zone="gnome-font-face-get-font"><primary sortas="gnome_font_face_get_font">gnome_font_face_get_font</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_face_get_font            (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gdouble">gdouble</link> size,
                                                         <link linkend="gdouble">gdouble</link> xres,
                                                         <link linkend="gdouble">gdouble</link> yres);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xres</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>yres</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-font-default" role="function">
<title>gnome_font_face_get_font_default ()</title>
<indexterm zone="gnome-font-face-get-font-default"><primary sortas="gnome_font_face_get_font_default">gnome_font_face_get_font_default</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_face_get_font_default    (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-name" role="function">
<title>gnome_font_face_get_name ()</title>
<indexterm zone="gnome-font-face-get-name"><primary sortas="gnome_font_face_get_name">gnome_font_face_get_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_name            (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
Return the name of the Font</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a const pointer to the name, NULL on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-family-name" role="function">
<title>gnome_font_face_get_family_name ()</title>
<indexterm zone="gnome-font-face-get-family-name"><primary sortas="gnome_font_face_get_family_name">gnome_font_face_get_family_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_family_name     (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
Get the family name</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a const pointer to the family name, NULL on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-species-name" role="function">
<title>gnome_font_face_get_species_name ()</title>
<indexterm zone="gnome-font-face-get-species-name"><primary sortas="gnome_font_face_get_species_name">gnome_font_face_get_species_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_species_name    (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
Get the species name of the font</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a const pointer to the species name, NULL on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-ps-name" role="function">
<title>gnome_font_face_get_ps_name ()</title>
<indexterm zone="gnome-font-face-get-ps-name"><primary sortas="gnome_font_face_get_ps_name">gnome_font_face_get_ps_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_ps_name         (const <link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
The postscript name of the font. This is the name with which
the font is embeded inside Postscript/PDF jobs.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a const pointer to the name, NULL on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-num-glyphs" role="function">
<title>gnome_font_face_get_num_glyphs ()</title>
<indexterm zone="gnome-font-face-get-num-glyphs"><primary sortas="gnome_font_face_get_num_glyphs">gnome_font_face_get_num_glyphs</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_font_face_get_num_glyphs      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
Returns the number of glyphs in the font</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> number of glyphs, 0 on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-lookup-default" role="function">
<title>gnome_font_face_lookup_default ()</title>
<indexterm zone="gnome-font-face-lookup-default"><primary sortas="gnome_font_face_lookup_default">gnome_font_face_lookup_default</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_font_face_lookup_default      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> unicode);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unicode</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-stdbbox" role="function">
<title>gnome_font_face_get_stdbbox ()</title>
<indexterm zone="gnome-font-face-get-stdbbox"><primary sortas="gnome_font_face_get_stdbbox">gnome_font_face_get_stdbbox</primary></indexterm><programlisting>const <link linkend="ArtDRect">ArtDRect</link> *    gnome_font_face_get_stdbbox         (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-stdbbox" role="function">
<title>gnome_font_face_get_glyph_stdbbox ()</title>
<indexterm zone="gnome-font-face-get-glyph-stdbbox"><primary sortas="gnome_font_face_get_glyph_stdbbox">gnome_font_face_get_glyph_stdbbox</primary></indexterm><programlisting><link linkend="ArtDRect">ArtDRect</link> *          gnome_font_face_get_glyph_stdbbox   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtDRect">ArtDRect</link> *bbox);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bbox</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-stdadvance" role="function">
<title>gnome_font_face_get_glyph_stdadvance ()</title>
<indexterm zone="gnome-font-face-get-glyph-stdadvance"><primary sortas="gnome_font_face_get_glyph_stdadvance">gnome_font_face_get_glyph_stdadvance</primary></indexterm><programlisting><link linkend="ArtPoint">ArtPoint</link> *          gnome_font_face_get_glyph_stdadvance
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtPoint">ArtPoint</link> *advance);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>advance</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-stdoutline" role="function">
<title>gnome_font_face_get_glyph_stdoutline ()</title>
<indexterm zone="gnome-font-face-get-glyph-stdoutline"><primary sortas="gnome_font_face_get_glyph_stdoutline">gnome_font_face_get_glyph_stdoutline</primary></indexterm><programlisting>const <link linkend="ArtBpath">ArtBpath</link> *    gnome_font_face_get_glyph_stdoutline
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-stdkerning" role="function">
<title>gnome_font_face_get_glyph_stdkerning ()</title>
<indexterm zone="gnome-font-face-get-glyph-stdkerning"><primary sortas="gnome_font_face_get_glyph_stdkerning">gnome_font_face_get_glyph_stdkerning</primary></indexterm><programlisting><link linkend="ArtPoint">ArtPoint</link> *          gnome_font_face_get_glyph_stdkerning
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph0,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="ArtPoint">ArtPoint</link> *kerning);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph0</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kerning</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-sample" role="function">
<title>gnome_font_face_get_sample ()</title>
<indexterm zone="gnome-font-face-get-sample"><primary sortas="gnome_font_face_get_sample">gnome_font_face_get_sample</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_sample          (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-weight-code" role="function">
<title>gnome_font_face_get_weight_code ()</title>
<indexterm zone="gnome-font-face-get-weight-code"><primary sortas="gnome_font_face_get_weight_code">gnome_font_face_get_weight_code</primary></indexterm><programlisting><link linkend="GnomeFontWeight">GnomeFontWeight</link>     gnome_font_face_get_weight_code     (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-is-italic" role="function">
<title>gnome_font_face_is_italic ()</title>
<indexterm zone="gnome-font-face-is-italic"><primary sortas="gnome_font_face_is_italic">gnome_font_face_is_italic</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_font_face_is_italic           (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-is-fixed-width" role="function">
<title>gnome_font_face_is_fixed_width ()</title>
<indexterm zone="gnome-font-face-is-fixed-width"><primary sortas="gnome_font_face_is_fixed_width">gnome_font_face_is_fixed_width</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_font_face_is_fixed_width      (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-ascender" role="function">
<title>gnome_font_face_get_ascender ()</title>
<indexterm zone="gnome-font-face-get-ascender"><primary sortas="gnome_font_face_get_ascender">gnome_font_face_get_ascender</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_ascender        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-descender" role="function">
<title>gnome_font_face_get_descender ()</title>
<indexterm zone="gnome-font-face-get-descender"><primary sortas="gnome_font_face_get_descender">gnome_font_face_get_descender</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_descender       (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-underline-position" role="function">
<title>gnome_font_face_get_underline_position ()</title>
<indexterm zone="gnome-font-face-get-underline-position"><primary sortas="gnome_font_face_get_underline_position">gnome_font_face_get_underline_position</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_underline_position
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-underline-thickness" role="function">
<title>gnome_font_face_get_underline_thickness ()</title>
<indexterm zone="gnome-font-face-get-underline-thickness"><primary sortas="gnome_font_face_get_underline_thickness">gnome_font_face_get_underline_thickness</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_underline_thickness
                                                        (<link linkend="GnomeFontFace">GnomeFontFace</link> *face);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-width" role="function">
<title>gnome_font_face_get_glyph_width ()</title>
<indexterm zone="gnome-font-face-get-glyph-width"><primary sortas="gnome_font_face_get_glyph_width">gnome_font_face_get_glyph_width</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_glyph_width     (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-kerning" role="function">
<title>gnome_font_face_get_glyph_kerning ()</title>
<indexterm zone="gnome-font-face-get-glyph-kerning"><primary sortas="gnome_font_face_get_glyph_kerning">gnome_font_face_get_glyph_kerning</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_face_get_glyph_kerning   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="gint">gint</link> glyph2);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-face-get-glyph-ps-name" role="function">
<title>gnome_font_face_get_glyph_ps_name ()</title>
<indexterm zone="gnome-font-face-get-glyph-ps-name"><primary sortas="gnome_font_face_get_glyph_ps_name">gnome_font_face_get_glyph_ps_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_face_get_glyph_ps_name   (<link linkend="GnomeFontFace">GnomeFontFace</link> *face,
                                                         <link linkend="gint">gint</link> glyph);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>face</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
