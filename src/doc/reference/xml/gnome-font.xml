<refentry id="libgnomeprint-gnome-font">
<refmeta>
<refentrytitle role="top_of_page" id="libgnomeprint-gnome-font.top_of_page">gnome-font</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEPRINT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-font</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libgnomeprint-gnome-font.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GnomeFont">GnomeFont</link>;
                    <link linkend="GnomeFontFace">GnomeFontFace</link>;
#define             <link linkend="gnome-font-ref">gnome_font_ref</link>                      (f)
#define             <link linkend="gnome-font-unref">gnome_font_unref</link>                    (f)
enum                <link linkend="GnomeFontWeight">GnomeFontWeight</link>;
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-get-name">gnome_font_get_name</link>                 (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-get-family-name">gnome_font_get_family_name</link>          (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-get-species-name">gnome_font_get_species_name</link>         (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link> *      <link linkend="gnome-font-get-ps-name">gnome_font_get_ps_name</link>              (const <link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gint">gint</link>                <link linkend="gnome-font-lookup-default">gnome_font_lookup_default</link>           (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> unicode);
<link linkend="ArtPoint">ArtPoint</link> *          <link linkend="gnome-font-get-glyph-stdadvance">gnome_font_get_glyph_stdadvance</link>     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtPoint">ArtPoint</link> *advance);
<link linkend="ArtDRect">ArtDRect</link> *          <link linkend="gnome-font-get-glyph-stdbbox">gnome_font_get_glyph_stdbbox</link>        (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtDRect">ArtDRect</link> *bbox);
const <link linkend="ArtBpath">ArtBpath</link> *    <link linkend="gnome-font-get-glyph-stdoutline">gnome_font_get_glyph_stdoutline</link>     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph);
<link linkend="ArtPoint">ArtPoint</link> *          <link linkend="gnome-font-get-glyph-stdkerning">gnome_font_get_glyph_stdkerning</link>     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph0,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="ArtPoint">ArtPoint</link> *kerning);
<link linkend="GnomeFontFace">GnomeFontFace</link> *     <link linkend="gnome-font-get-face">gnome_font_get_face</link>                 (const <link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-size">gnome_font_get_size</link>                 (const <link linkend="GnomeFont">GnomeFont</link> *font);
#define             <link linkend="gnome-font-get-weight-code">gnome_font_get_weight_code</link>          (f)
#define             <link linkend="gnome-font-is-italic">gnome_font_is_italic</link>                (f)
#define             <link linkend="gnome-font-is-fixed-width">gnome_font_is_fixed_width</link>           (f)
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-ascender">gnome_font_get_ascender</link>             (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-descender">gnome_font_get_descender</link>            (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-underline-position">gnome_font_get_underline_position</link>   (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-underline-thickness">gnome_font_get_underline_thickness</link>  (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-glyph-width">gnome_font_get_glyph_width</link>          (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph);
<link linkend="gdouble">gdouble</link>             <link linkend="gnome-font-get-glyph-kerning">gnome_font_get_glyph_kerning</link>        (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="gint">gint</link> glyph2);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find-closest-from-weight-slant">gnome_font_find_closest_from_weight_slant</link>
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                                         <link linkend="gboolean">gboolean</link> italic,
                                                         <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find">gnome_font_find</link>                     (const <link linkend="guchar">guchar</link> *name,
                                                         <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find-closest">gnome_font_find_closest</link>             (const <link linkend="guchar">guchar</link> *name,
                                                         <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find-from-full-name">gnome_font_find_from_full_name</link>      (const <link linkend="guchar">guchar</link> *string);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find-from-filename">gnome_font_find_from_filename</link>       (const <link linkend="guchar">guchar</link> *filename,
                                                         <link linkend="gint">gint</link> index_,
                                                         <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link> *         <link linkend="gnome-font-find-closest-from-full-name">gnome_font_find_closest_from_full_name</link>
                                                        (const <link linkend="guchar">guchar</link> *string);
<link linkend="GList">GList</link> *             <link linkend="gnome-font-list">gnome_font_list</link>                     (void);
<link linkend="void">void</link>                <link linkend="gnome-font-list-free">gnome_font_list_free</link>                (<link linkend="GList">GList</link> *fontlist);
<link linkend="GList">GList</link> *             <link linkend="gnome-font-family-list">gnome_font_family_list</link>              (void);
<link linkend="void">void</link>                <link linkend="gnome-font-family-list-free">gnome_font_family_list_free</link>         (<link linkend="GList">GList</link> *fontlist);
<link linkend="GList">GList</link> *             <link linkend="gnome-font-style-list">gnome_font_style_list</link>               (const <link linkend="guchar">guchar</link> *family);
<link linkend="void">void</link>                <link linkend="gnome-font-style-list-free">gnome_font_style_list_free</link>          (<link linkend="GList">GList</link> *styles);
<link linkend="guchar">guchar</link> *            <link linkend="gnome-font-get-full-name">gnome_font_get_full_name</link>            (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="PangoFont">PangoFont</link> *         <link linkend="gnome-font-get-closest-pango-font">gnome_font_get_closest_pango_font</link>   (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="PangoFontMap">PangoFontMap</link> *map,
                                                         <link linkend="gdouble">gdouble</link> dpi);
<link linkend="PangoFontDescription">PangoFontDescription</link> * <link linkend="gnome-font-get-pango-description">gnome_font_get_pango_description</link> (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gdouble">gdouble</link> dpi);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgnomeprint-gnome-font.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libgnomeprint-gnome-font.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeFont" role="struct">
<title>GnomeFont</title>
<indexterm zone="GnomeFont"><primary sortas="GnomeFont">GnomeFont</primary></indexterm><programlisting>typedef struct _GnomeFont GnomeFont;</programlisting>
<para>
</para></refsect2>
<refsect2 id="GnomeFontFace" role="struct">
<title>GnomeFontFace</title>
<indexterm zone="GnomeFontFace"><primary sortas="GnomeFontFace">GnomeFontFace</primary></indexterm><programlisting>typedef struct _GnomeFontFace GnomeFontFace;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnome-font-ref" role="macro">
<title>gnome_font_ref()</title>
<indexterm zone="gnome-font-ref"><primary sortas="gnome_font_ref">gnome_font_ref</primary></indexterm><programlisting>#define             gnome_font_ref(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-unref" role="macro">
<title>gnome_font_unref()</title>
<indexterm zone="gnome-font-unref"><primary sortas="gnome_font_unref">gnome_font_unref</primary></indexterm><programlisting>#define             gnome_font_unref(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GnomeFontWeight" role="enum">
<title>enum GnomeFontWeight</title>
<indexterm zone="GnomeFontWeight"><primary sortas="GnomeFontWeight">GnomeFontWeight</primary></indexterm><programlisting>typedef enum {
	GNOME_FONT_LIGHTEST = 100,
	GNOME_FONT_EXTRA_LIGHT = 100,
	GNOME_FONT_THIN = 200,
	GNOME_FONT_LIGHT = 300,
	GNOME_FONT_BOOK = 400,
	GNOME_FONT_REGULAR = 400,
	GNOME_FONT_MEDIUM = 500,
	GNOME_FONT_SEMI = 600,
	GNOME_FONT_DEMI = 600,
	GNOME_FONT_BOLD = 700,
	GNOME_FONT_HEAVY = 900,
	GNOME_FONT_EXTRABOLD = 900,
	GNOME_FONT_BLACK = 1000,
	GNOME_FONT_EXTRABLACK = 1100,
	GNOME_FONT_HEAVIEST = 1100
} GnomeFontWeight;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnome-font-get-name" role="function">
<title>gnome_font_get_name ()</title>
<indexterm zone="gnome-font-get-name"><primary sortas="gnome_font_get_name">gnome_font_get_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_get_name                 (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-family-name" role="function">
<title>gnome_font_get_family_name ()</title>
<indexterm zone="gnome-font-get-family-name"><primary sortas="gnome_font_get_family_name">gnome_font_get_family_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_get_family_name          (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-species-name" role="function">
<title>gnome_font_get_species_name ()</title>
<indexterm zone="gnome-font-get-species-name"><primary sortas="gnome_font_get_species_name">gnome_font_get_species_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_get_species_name         (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-ps-name" role="function">
<title>gnome_font_get_ps_name ()</title>
<indexterm zone="gnome-font-get-ps-name"><primary sortas="gnome_font_get_ps_name">gnome_font_get_ps_name</primary></indexterm><programlisting>const <link linkend="guchar">guchar</link> *      gnome_font_get_ps_name              (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-lookup-default" role="function">
<title>gnome_font_lookup_default ()</title>
<indexterm zone="gnome-font-lookup-default"><primary sortas="gnome_font_lookup_default">gnome_font_lookup_default</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_font_lookup_default           (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> unicode);</programlisting>
<para>
Get the glyph number corresponding to a given unicode</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unicode</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> glyph number, -1 if it is not mapped
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-stdadvance" role="function">
<title>gnome_font_get_glyph_stdadvance ()</title>
<indexterm zone="gnome-font-get-glyph-stdadvance"><primary sortas="gnome_font_get_glyph_stdadvance">gnome_font_get_glyph_stdadvance</primary></indexterm><programlisting><link linkend="ArtPoint">ArtPoint</link> *          gnome_font_get_glyph_stdadvance     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtPoint">ArtPoint</link> *advance);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>advance</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-stdbbox" role="function">
<title>gnome_font_get_glyph_stdbbox ()</title>
<indexterm zone="gnome-font-get-glyph-stdbbox"><primary sortas="gnome_font_get_glyph_stdbbox">gnome_font_get_glyph_stdbbox</primary></indexterm><programlisting><link linkend="ArtDRect">ArtDRect</link> *          gnome_font_get_glyph_stdbbox        (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph,
                                                         <link linkend="ArtDRect">ArtDRect</link> *bbox);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bbox</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-stdoutline" role="function">
<title>gnome_font_get_glyph_stdoutline ()</title>
<indexterm zone="gnome-font-get-glyph-stdoutline"><primary sortas="gnome_font_get_glyph_stdoutline">gnome_font_get_glyph_stdoutline</primary></indexterm><programlisting>const <link linkend="ArtBpath">ArtBpath</link> *    gnome_font_get_glyph_stdoutline     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-stdkerning" role="function">
<title>gnome_font_get_glyph_stdkerning ()</title>
<indexterm zone="gnome-font-get-glyph-stdkerning"><primary sortas="gnome_font_get_glyph_stdkerning">gnome_font_get_glyph_stdkerning</primary></indexterm><programlisting><link linkend="ArtPoint">ArtPoint</link> *          gnome_font_get_glyph_stdkerning     (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph0,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="ArtPoint">ArtPoint</link> *kerning);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph0</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kerning</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-face" role="function">
<title>gnome_font_get_face ()</title>
<indexterm zone="gnome-font-get-face"><primary sortas="gnome_font_get_face">gnome_font_get_face</primary></indexterm><programlisting><link linkend="GnomeFontFace">GnomeFontFace</link> *     gnome_font_get_face                 (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-size" role="function">
<title>gnome_font_get_size ()</title>
<indexterm zone="gnome-font-get-size"><primary sortas="gnome_font_get_size">gnome_font_get_size</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_size                 (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-weight-code" role="macro">
<title>gnome_font_get_weight_code()</title>
<indexterm zone="gnome-font-get-weight-code"><primary sortas="gnome_font_get_weight_code">gnome_font_get_weight_code</primary></indexterm><programlisting>#define             gnome_font_get_weight_code(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-is-italic" role="macro">
<title>gnome_font_is_italic()</title>
<indexterm zone="gnome-font-is-italic"><primary sortas="gnome_font_is_italic">gnome_font_is_italic</primary></indexterm><programlisting>#define             gnome_font_is_italic(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-is-fixed-width" role="macro">
<title>gnome_font_is_fixed_width()</title>
<indexterm zone="gnome-font-is-fixed-width"><primary sortas="gnome_font_is_fixed_width">gnome_font_is_fixed_width</primary></indexterm><programlisting>#define             gnome_font_is_fixed_width(f)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-ascender" role="function">
<title>gnome_font_get_ascender ()</title>
<indexterm zone="gnome-font-get-ascender"><primary sortas="gnome_font_get_ascender">gnome_font_get_ascender</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_ascender             (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The ascender of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-descender" role="function">
<title>gnome_font_get_descender ()</title>
<indexterm zone="gnome-font-get-descender"><primary sortas="gnome_font_get_descender">gnome_font_get_descender</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_descender            (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The descender of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-underline-position" role="function">
<title>gnome_font_get_underline_position ()</title>
<indexterm zone="gnome-font-get-underline-position"><primary sortas="gnome_font_get_underline_position">gnome_font_get_underline_position</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_underline_position   (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The underline position of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-underline-thickness" role="function">
<title>gnome_font_get_underline_thickness ()</title>
<indexterm zone="gnome-font-get-underline-thickness"><primary sortas="gnome_font_get_underline_thickness">gnome_font_get_underline_thickness</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_underline_thickness  (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The underline thickness of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-width" role="function">
<title>gnome_font_get_glyph_width ()</title>
<indexterm zone="gnome-font-get-glyph-width"><primary sortas="gnome_font_get_glyph_width">gnome_font_get_glyph_width</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_glyph_width          (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-glyph-kerning" role="function">
<title>gnome_font_get_glyph_kerning ()</title>
<indexterm zone="gnome-font-get-glyph-kerning"><primary sortas="gnome_font_get_glyph_kerning">gnome_font_get_glyph_kerning</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             gnome_font_get_glyph_kerning        (<link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gint">gint</link> glyph1,
                                                         <link linkend="gint">gint</link> glyph2);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find-closest-from-weight-slant" role="function">
<title>gnome_font_find_closest_from_weight_slant ()</title>
<indexterm zone="gnome-font-find-closest-from-weight-slant"><primary sortas="gnome_font_find_closest_from_weight_slant">gnome_font_find_closest_from_weight_slant</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find_closest_from_weight_slant
                                                        (const <link linkend="guchar">guchar</link> *family,
                                                         <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                                         <link linkend="gboolean">gboolean</link> italic,
                                                         <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weight</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>italic</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find" role="function">
<title>gnome_font_find ()</title>
<indexterm zone="gnome-font-find"><primary sortas="gnome_font_find">gnome_font_find</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find                     (const <link linkend="guchar">guchar</link> *name,
                                                         <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find-closest" role="function">
<title>gnome_font_find_closest ()</title>
<indexterm zone="gnome-font-find-closest"><primary sortas="gnome_font_find_closest">gnome_font_find_closest</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find_closest             (const <link linkend="guchar">guchar</link> *name,
                                                         <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find-from-full-name" role="function">
<title>gnome_font_find_from_full_name ()</title>
<indexterm zone="gnome-font-find-from-full-name"><primary sortas="gnome_font_find_from_full_name">gnome_font_find_from_full_name</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find_from_full_name      (const <link linkend="guchar">guchar</link> *string);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find-from-filename" role="function">
<title>gnome_font_find_from_filename ()</title>
<indexterm zone="gnome-font-find-from-filename"><primary sortas="gnome_font_find_from_filename">gnome_font_find_from_filename</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find_from_filename       (const <link linkend="guchar">guchar</link> *filename,
                                                         <link linkend="gint">gint</link> index_,
                                                         <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>
Creates a font using the filename and index of the face within the file to
identify the <link linkend="GnomeFontFace"><type>GnomeFontFace</type></link>. The font must already be within
the system font database; this can't be used to access arbitrary
fonts on disk.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> filename of a font face in the system font database
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index_</parameter>&#160;:</term>
<listitem><simpara> index of the face within <parameter>filename</parameter>. (Font formats such as
         TTC/TrueType Collections can have multiple fonts within
         a single file.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> size (in points) at which to load the font
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly created font if the face could be located,
 otherwise <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-find-closest-from-full-name" role="function">
<title>gnome_font_find_closest_from_full_name ()</title>
<indexterm zone="gnome-font-find-closest-from-full-name"><primary sortas="gnome_font_find_closest_from_full_name">gnome_font_find_closest_from_full_name</primary></indexterm><programlisting><link linkend="GnomeFont">GnomeFont</link> *         gnome_font_find_closest_from_full_name
                                                        (const <link linkend="guchar">guchar</link> *string);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-list" role="function">
<title>gnome_font_list ()</title>
<indexterm zone="gnome-font-list"><primary sortas="gnome_font_list">gnome_font_list</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gnome_font_list                     (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-list-free" role="function">
<title>gnome_font_list_free ()</title>
<indexterm zone="gnome-font-list-free"><primary sortas="gnome_font_list_free">gnome_font_list_free</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_font_list_free                (<link linkend="GList">GList</link> *fontlist);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>fontlist</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-family-list" role="function">
<title>gnome_font_family_list ()</title>
<indexterm zone="gnome-font-family-list"><primary sortas="gnome_font_family_list">gnome_font_family_list</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gnome_font_family_list              (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-family-list-free" role="function">
<title>gnome_font_family_list_free ()</title>
<indexterm zone="gnome-font-family-list-free"><primary sortas="gnome_font_family_list_free">gnome_font_family_list_free</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_font_family_list_free         (<link linkend="GList">GList</link> *fontlist);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>fontlist</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-style-list" role="function">
<title>gnome_font_style_list ()</title>
<indexterm zone="gnome-font-style-list"><primary sortas="gnome_font_style_list">gnome_font_style_list</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gnome_font_style_list               (const <link linkend="guchar">guchar</link> *family);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-style-list-free" role="function">
<title>gnome_font_style_list_free ()</title>
<indexterm zone="gnome-font-style-list-free"><primary sortas="gnome_font_style_list_free">gnome_font_style_list_free</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_font_style_list_free          (<link linkend="GList">GList</link> *styles);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>styles</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-full-name" role="function">
<title>gnome_font_get_full_name ()</title>
<indexterm zone="gnome-font-get-full-name"><primary sortas="gnome_font_get_full_name">gnome_font_get_full_name</primary></indexterm><programlisting><link linkend="guchar">guchar</link> *            gnome_font_get_full_name            (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-closest-pango-font" role="function">
<title>gnome_font_get_closest_pango_font ()</title>
<indexterm zone="gnome-font-get-closest-pango-font"><primary sortas="gnome_font_get_closest_pango_font">gnome_font_get_closest_pango_font</primary></indexterm><programlisting><link linkend="PangoFont">PangoFont</link> *         gnome_font_get_closest_pango_font   (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="PangoFontMap">PangoFontMap</link> *map,
                                                         <link linkend="gdouble">gdouble</link> dpi);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>map</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-font-get-pango-description" role="function">
<title>gnome_font_get_pango_description ()</title>
<indexterm zone="gnome-font-get-pango-description"><primary sortas="gnome_font_get_pango_description">gnome_font_get_pango_description</primary></indexterm><programlisting><link linkend="PangoFontDescription">PangoFontDescription</link> * gnome_font_get_pango_description (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                                         <link linkend="gdouble">gdouble</link> dpi);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
