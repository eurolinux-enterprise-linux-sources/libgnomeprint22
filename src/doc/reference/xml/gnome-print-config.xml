<refentry id="libgnomeprint-gnome-print-config">
<refmeta>
<refentrytitle role="top_of_page" id="libgnomeprint-gnome-print-config.top_of_page">gnome-print-config</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEPRINT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-print-config</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libgnomeprint-gnome-print-config.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GnomePrintConfig">GnomePrintConfig</link>;
<link linkend="GnomePrintConfig">GnomePrintConfig</link> *  <link linkend="gnome-print-config-default">gnome_print_config_default</link>          (void);
<link linkend="GnomePrintConfig">GnomePrintConfig</link> *  <link linkend="gnome-print-config-ref">gnome_print_config_ref</link>              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);
<link linkend="GnomePrintConfig">GnomePrintConfig</link> *  <link linkend="gnome-print-config-unref">gnome_print_config_unref</link>            (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);
<link linkend="GnomePrintConfig">GnomePrintConfig</link> *  <link linkend="gnome-print-config-dup">gnome_print_config_dup</link>              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);
<link linkend="guchar">guchar</link> *            <link linkend="gnome-print-config-get">gnome_print_config_get</link>              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-set">gnome_print_config_set</link>              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         const <link linkend="guchar">guchar</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-get-boolean">gnome_print_config_get_boolean</link>      (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-get-int">gnome_print_config_get_int</link>          (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gint">gint</link> *val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-get-double">gnome_print_config_get_double</link>       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> *val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-get-length">gnome_print_config_get_length</link>       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> *val,
                                                         const <link linkend="GnomePrintUnit">GnomePrintUnit</link> **unit);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-set-boolean">gnome_print_config_set_boolean</link>      (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-set-int">gnome_print_config_set_int</link>          (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gint">gint</link> val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-set-double">gnome_print_config_set_double</link>       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> val);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-print-config-set-length">gnome_print_config_set_length</link>       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> val,
                                                         const <link linkend="GnomePrintUnit">GnomePrintUnit</link> *unit);
<link linkend="void">void</link>                <link linkend="gnome-print-config-dump">gnome_print_config_dump</link>             (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *gpc);
#define             <link linkend="GNOME-PRINT-KEY-PAPER-SIZE--CAPS">GNOME_PRINT_KEY_PAPER_SIZE</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-WIDTH--CAPS">GNOME_PRINT_KEY_PAPER_WIDTH</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-HEIGHT--CAPS">GNOME_PRINT_KEY_PAPER_HEIGHT</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-ORIENTATION--CAPS">GNOME_PRINT_KEY_PAPER_ORIENTATION</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-ORIENTATION-MATRIX--CAPS">GNOME_PRINT_KEY_PAPER_ORIENTATION_MATRIX</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-ORIENTATION--CAPS">GNOME_PRINT_KEY_PAGE_ORIENTATION</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-ORIENTATION-MATRIX--CAPS">GNOME_PRINT_KEY_PAGE_ORIENTATION_MATRIX</link>
#define             <link linkend="GNOME-PRINT-KEY-ORIENTATION--CAPS">GNOME_PRINT_KEY_ORIENTATION</link>
#define             <link linkend="GNOME-PRINT-KEY-LAYOUT--CAPS">GNOME_PRINT_KEY_LAYOUT</link>
#define             <link linkend="GNOME-PRINT-KEY-LAYOUT-WIDTH--CAPS">GNOME_PRINT_KEY_LAYOUT_WIDTH</link>
#define             <link linkend="GNOME-PRINT-KEY-LAYOUT-HEIGHT--CAPS">GNOME_PRINT_KEY_LAYOUT_HEIGHT</link>
#define             <link linkend="GNOME-PRINT-KEY-RESOLUTION--CAPS">GNOME_PRINT_KEY_RESOLUTION</link>
#define             <link linkend="GNOME-PRINT-KEY-RESOLUTION-DPI--CAPS">GNOME_PRINT_KEY_RESOLUTION_DPI</link>
#define             <link linkend="GNOME-PRINT-KEY-RESOLUTION-DPI-X--CAPS">GNOME_PRINT_KEY_RESOLUTION_DPI_X</link>
#define             <link linkend="GNOME-PRINT-KEY-RESOLUTION-DPI-Y--CAPS">GNOME_PRINT_KEY_RESOLUTION_DPI_Y</link>
#define             <link linkend="GNOME-PRINT-KEY-NUM-COPIES--CAPS">GNOME_PRINT_KEY_NUM_COPIES</link>
#define             <link linkend="GNOME-PRINT-KEY-COLLATE--CAPS">GNOME_PRINT_KEY_COLLATE</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-MARGIN-LEFT--CAPS">GNOME_PRINT_KEY_PAGE_MARGIN_LEFT</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-MARGIN-RIGHT--CAPS">GNOME_PRINT_KEY_PAGE_MARGIN_RIGHT</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-MARGIN-TOP--CAPS">GNOME_PRINT_KEY_PAGE_MARGIN_TOP</link>
#define             <link linkend="GNOME-PRINT-KEY-PAGE-MARGIN-BOTTOM--CAPS">GNOME_PRINT_KEY_PAGE_MARGIN_BOTTOM</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-MARGIN-LEFT--CAPS">GNOME_PRINT_KEY_PAPER_MARGIN_LEFT</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-MARGIN-RIGHT--CAPS">GNOME_PRINT_KEY_PAPER_MARGIN_RIGHT</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-MARGIN-TOP--CAPS">GNOME_PRINT_KEY_PAPER_MARGIN_TOP</link>
#define             <link linkend="GNOME-PRINT-KEY-PAPER-MARGIN-BOTTOM--CAPS">GNOME_PRINT_KEY_PAPER_MARGIN_BOTTOM</link>
#define             <link linkend="GNOME-PRINT-KEY-OUTPUT-FILENAME--CAPS">GNOME_PRINT_KEY_OUTPUT_FILENAME</link>
#define             <link linkend="GNOME-PRINT-KEY-DOCUMENT-NAME--CAPS">GNOME_PRINT_KEY_DOCUMENT_NAME</link>
#define             <link linkend="GNOME-PRINT-KEY-PREFERED-UNIT--CAPS">GNOME_PRINT_KEY_PREFERED_UNIT</link>
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgnomeprint-gnome-print-config.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libgnomeprint-gnome-print-config.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomePrintConfig" role="struct">
<title>GnomePrintConfig</title>
<indexterm zone="GnomePrintConfig"><primary sortas="GnomePrintConfig">GnomePrintConfig</primary></indexterm><programlisting>typedef struct _GnomePrintConfig GnomePrintConfig;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnome-print-config-default" role="function">
<title>gnome_print_config_default ()</title>
<indexterm zone="gnome-print-config-default"><primary sortas="gnome_print_config_default">gnome_print_config_default</primary></indexterm><programlisting><link linkend="GnomePrintConfig">GnomePrintConfig</link> *  gnome_print_config_default          (void);</programlisting>
<para>
Creates a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object with the default printer and settings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object with the default settings

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-ref" role="function">
<title>gnome_print_config_ref ()</title>
<indexterm zone="gnome-print-config-ref"><primary sortas="gnome_print_config_ref">gnome_print_config_ref</primary></indexterm><programlisting><link linkend="GnomePrintConfig">GnomePrintConfig</link> *  gnome_print_config_ref              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);</programlisting>
<para>
Increase the reference count on the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object by one.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object to have its reference count increased
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object or <link linkend="NULL--CAPS"><literal>NULL</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-unref" role="function">
<title>gnome_print_config_unref ()</title>
<indexterm zone="gnome-print-config-unref"><primary sortas="gnome_print_config_unref">gnome_print_config_unref</primary></indexterm><programlisting><link linkend="GnomePrintConfig">GnomePrintConfig</link> *  gnome_print_config_unref            (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);</programlisting>
<para>
Decrease the reference count on the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object by one.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object to have its reference count decreased
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object or <link linkend="NULL--CAPS"><literal>NULL</literal></link> on failure.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-dup" role="function">
<title>gnome_print_config_dup ()</title>
<indexterm zone="gnome-print-config-dup"><primary sortas="gnome_print_config_dup">gnome_print_config_dup</primary></indexterm><programlisting><link linkend="GnomePrintConfig">GnomePrintConfig</link> *  gnome_print_config_dup              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config);</programlisting>
<para>
Does a deep copy of the config <parameter>config</parameter>.  You should unref the returned 
<link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> using <link linkend="gnome-print-config-unref"><type>gnome_print_config_unref</type></link> when you are finished
using it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> The config to be copied
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A copy of config

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-get" role="function">
<title>gnome_print_config_get ()</title>
<indexterm zone="gnome-print-config-get"><primary sortas="gnome_print_config_get">gnome_print_config_get</primary></indexterm><programlisting><link linkend="guchar">guchar</link> *            gnome_print_config_get              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key);</programlisting>
<para>
Gets the value of string <parameter>key</parameter> from the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.  The returned string
should be freed with <link linkend="g-free"><type>g_free</type></link> when you are finished with it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be obtained
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The value of the key, <link linkend="NULL--CAPS"><literal>NULL</literal></link> indicates failure.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-set" role="function">
<title>gnome_print_config_set ()</title>
<indexterm zone="gnome-print-config-set"><primary sortas="gnome_print_config_set">gnome_print_config_set</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_set              (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         const <link linkend="guchar">guchar</link> *value);</programlisting>
<para>
Sets the value of string <parameter>key</parameter> in the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object to value <parameter>value</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> String containing the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-get-boolean" role="function">
<title>gnome_print_config_get_boolean ()</title>
<indexterm zone="gnome-print-config-get-boolean"><primary sortas="gnome_print_config_get_boolean">gnome_print_config_get_boolean</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_get_boolean      (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *val);</programlisting>
<para>
Gets the value of key <parameter>key</parameter> from the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.  Converts values such
as "true", "y", "yes", and their opposites, to their boolean equivalent.  The
boolean value will be stored in the variable <parameter>val</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be obtained
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Pointer to a boolean variable to store the value in.  Should initially be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> if a value was retrieved, <link linkend="FALSE--CAPS"><type>FALSE</type></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-get-int" role="function">
<title>gnome_print_config_get_int ()</title>
<indexterm zone="gnome-print-config-get-int"><primary sortas="gnome_print_config_get_int">gnome_print_config_get_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_get_int          (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gint">gint</link> *val);</programlisting>
<para>
Gets the value of key <parameter>key</parameter> from the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.  Converts values
to their integer equivalent.  The integer value will be stored in the variable 
<parameter>val</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be obtained
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Pointer to a integer variable to store the value in.  Should initially be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> if a value was retrieved, <link linkend="FALSE--CAPS"><type>FALSE</type></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-get-double" role="function">
<title>gnome_print_config_get_double ()</title>
<indexterm zone="gnome-print-config-get-double"><primary sortas="gnome_print_config_get_double">gnome_print_config_get_double</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_get_double       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> *val);</programlisting>
<para>
Gets the value of key <parameter>key</parameter> from the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.  Converts values
to their double equivalent.  The double value will be stored in the variable 
<parameter>val</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be obtained
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Pointer to a double variable to store the value in.  Should initially be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> if a value was retrieved, <link linkend="FALSE--CAPS"><type>FALSE</type></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-get-length" role="function">
<title>gnome_print_config_get_length ()</title>
<indexterm zone="gnome-print-config-get-length"><primary sortas="gnome_print_config_get_length">gnome_print_config_get_length</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_get_length       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> *val,
                                                         const <link linkend="GnomePrintUnit">GnomePrintUnit</link> **unit);</programlisting>
<para>
Gets the value of key <parameter>key</parameter> from the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.  Converts values
to their double equivalent.  The double value will be stored in the variable 
<parameter>val</parameter> and the units will be stored in <parameter>unit</parameter>.  You should allocate the storage 
for <parameter>unit</parameter> before calling this function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be obtained
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Pointer to a double variable to store the value in.  Should initially be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unit</parameter>&#160;:</term>
<listitem><simpara> Pointer to an already allocated <link linkend="GnomePrintUnit"><type>GnomePrintUnit</type></link> struct
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> if a value was retrieved, <link linkend="FALSE--CAPS"><type>FALSE</type></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-set-boolean" role="function">
<title>gnome_print_config_set_boolean ()</title>
<indexterm zone="gnome-print-config-set-boolean"><primary sortas="gnome_print_config_set_boolean">gnome_print_config_set_boolean</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_set_boolean      (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> val);</programlisting>
<para>
Set a <parameter>boolean</parameter> value in the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Boolean containing the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-set-int" role="function">
<title>gnome_print_config_set_int ()</title>
<indexterm zone="gnome-print-config-set-int"><primary sortas="gnome_print_config_set_int">gnome_print_config_set_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_set_int          (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gint">gint</link> val);</programlisting>
<para>
Set an <parameter>integer</parameter> value in the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Integer containing the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-set-double" role="function">
<title>gnome_print_config_set_double ()</title>
<indexterm zone="gnome-print-config-set-double"><primary sortas="gnome_print_config_set_double">gnome_print_config_set_double</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_set_double       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> val);</programlisting>
<para>
Set a <parameter>double</parameter> value in the <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Double containing the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-set-length" role="function">
<title>gnome_print_config_set_length ()</title>
<indexterm zone="gnome-print-config-set-length"><primary sortas="gnome_print_config_set_length">gnome_print_config_set_length</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_print_config_set_length       (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *config,
                                                         const <link linkend="guchar">guchar</link> *key,
                                                         <link linkend="gdouble">gdouble</link> val,
                                                         const <link linkend="GnomePrintUnit">GnomePrintUnit</link> *unit);</programlisting>
<para>
Sets a double value and the units it is using.  This should be used in 
conjunction with <link linkend="gnome-print-config-get-length"><type>gnome_print_config_get_length</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> String containing the path of key whose value is to be set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara> Double containing the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unit</parameter>&#160;:</term>
<listitem><simpara> Units to use when setting value
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> on failure

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-print-config-dump" role="function">
<title>gnome_print_config_dump ()</title>
<indexterm zone="gnome-print-config-dump"><primary sortas="gnome_print_config_dump">gnome_print_config_dump</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_print_config_dump             (<link linkend="GnomePrintConfig">GnomePrintConfig</link> *gpc);</programlisting>
<para>
Print out the tree structure representing the GnomePrintConfig.  Output
is to <link linkend="STDOUT--CAPS"><literal>STDOUT</literal></link> and is limited to a depth of 20.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gpc</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GnomePrintConfig"><type>GnomePrintConfig</type></link> to output
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-SIZE--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_SIZE</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-SIZE--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_SIZE">GNOME_PRINT_KEY_PAPER_SIZE</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_SIZE               "Settings.Output.Media.PhysicalSize" /* Paper name, such as A4 or Letter */
</programlisting>
<para>
Convenience macro for key that contains the paper size, eg: A4, Letter.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-WIDTH--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_WIDTH</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-WIDTH--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_WIDTH">GNOME_PRINT_KEY_PAPER_WIDTH</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_WIDTH              "Settings.Output.Media.PhysicalSize.Width" /* Arbitrary units - use conversion */
</programlisting>
<para>
Convenience macro for key that contains the width of the paper.  Units are
arbitrary so use <link linkend="gnome-print-config-get-length"><type>gnome_print_config_get_length</type></link> and <link linkend="gnome-print-set-length"><type>gnome_print_set_length</type></link>.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-HEIGHT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_HEIGHT</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-HEIGHT--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_HEIGHT">GNOME_PRINT_KEY_PAPER_HEIGHT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_HEIGHT             "Settings.Output.Media.PhysicalSize.Height" /* Arbitrary units - use conversion */
</programlisting>
<para>
Convenience macro for key that contains the height of the paper.  Units are
arbitrary so use <link linkend="gnome-print-config-get-length"><type>gnome_print_config_get_length</type></link> and <link linkend="gnome-print-set-length"><type>gnome_print_set_length</type></link>.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-ORIENTATION--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_ORIENTATION</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-ORIENTATION--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_ORIENTATION">GNOME_PRINT_KEY_PAPER_ORIENTATION</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_ORIENTATION        "Settings.Output.Media.PhysicalOrientation" /* R0, R90, R180, R270 */
</programlisting>
<para>
Convenience macro for key that contains the orientation of the paper in terms
of degrees of rotation, eg: R0, R90, R180, and R270.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-ORIENTATION-MATRIX--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_ORIENTATION_MATRIX</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-ORIENTATION-MATRIX--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_ORIENTATION_MATRIX">GNOME_PRINT_KEY_PAPER_ORIENTATION_MATRIX</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_ORIENTATION_MATRIX "Settings.Output.Media.PhysicalOrientation.Paper2PrinterTransform" /* 3x2 abstract matrix */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-ORIENTATION--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_ORIENTATION</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-ORIENTATION--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_ORIENTATION">GNOME_PRINT_KEY_PAGE_ORIENTATION</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_ORIENTATION        "Settings.Document.Page.LogicalOrientation" /* R0, R90, R180, R270 */
</programlisting>
<para>
Convenience macro for the key that contains the orientation of the logical
page in terms of degrees of rotation, eg: R0, R90, R180, and R270.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-ORIENTATION-MATRIX--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_ORIENTATION_MATRIX</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-ORIENTATION-MATRIX--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_ORIENTATION_MATRIX">GNOME_PRINT_KEY_PAGE_ORIENTATION_MATRIX</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_ORIENTATION_MATRIX "Settings.Document.Page.LogicalOrientation.Page2LayoutTransform" /* 3x2 abstract matrix */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-ORIENTATION--CAPS" role="macro">
<title>GNOME_PRINT_KEY_ORIENTATION</title>
<indexterm zone="GNOME-PRINT-KEY-ORIENTATION--CAPS"><primary sortas="GNOME_PRINT_KEY_ORIENTATION">GNOME_PRINT_KEY_ORIENTATION</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_ORIENTATION GNOME_PRINT_KEY_PAGE_ORIENTATION
</programlisting>
<para>
See <link linkend="GNOME-PRINT-KEY-PAGE-ORIENTATION--CAPS"><type>GNOME_PRINT_KEY_PAGE_ORIENTATION</type></link>.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-LAYOUT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_LAYOUT</title>
<indexterm zone="GNOME-PRINT-KEY-LAYOUT--CAPS"><primary sortas="GNOME_PRINT_KEY_LAYOUT">GNOME_PRINT_KEY_LAYOUT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_LAYOUT        "Settings.Document.Page.Layout"        /* Id of layout ('Plain' is always no-special-layout) */
</programlisting>
<para>
Convenience macro for key that contains the name for the logical layout
being used, eg: Plain.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-LAYOUT-WIDTH--CAPS" role="macro">
<title>GNOME_PRINT_KEY_LAYOUT_WIDTH</title>
<indexterm zone="GNOME-PRINT-KEY-LAYOUT-WIDTH--CAPS"><primary sortas="GNOME_PRINT_KEY_LAYOUT_WIDTH">GNOME_PRINT_KEY_LAYOUT_WIDTH</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_LAYOUT_WIDTH  "Settings.Document.Page.Layout.Width"  /* Double value */
</programlisting>
<para>
Convenience macro for key that contains the logical width of the page
as used by the application.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-LAYOUT-HEIGHT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_LAYOUT_HEIGHT</title>
<indexterm zone="GNOME-PRINT-KEY-LAYOUT-HEIGHT--CAPS"><primary sortas="GNOME_PRINT_KEY_LAYOUT_HEIGHT">GNOME_PRINT_KEY_LAYOUT_HEIGHT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_LAYOUT_HEIGHT "Settings.Document.Page.Layout.Height" /* Double value */
</programlisting>
<para>
Convenience macro for key that contains the logical height of the page
as used by the application.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-RESOLUTION--CAPS" role="macro">
<title>GNOME_PRINT_KEY_RESOLUTION</title>
<indexterm zone="GNOME-PRINT-KEY-RESOLUTION--CAPS"><primary sortas="GNOME_PRINT_KEY_RESOLUTION">GNOME_PRINT_KEY_RESOLUTION</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_RESOLUTION       "Settings.Output.Resolution"       /* String value, like 300x300 or 300dpi */
</programlisting>
<para>
Convenience macro for key that contains a string representing the
resolution of the printer, eg: 300x300 or 300dpi.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-RESOLUTION-DPI--CAPS" role="macro">
<title>GNOME_PRINT_KEY_RESOLUTION_DPI</title>
<indexterm zone="GNOME-PRINT-KEY-RESOLUTION-DPI--CAPS"><primary sortas="GNOME_PRINT_KEY_RESOLUTION_DPI">GNOME_PRINT_KEY_RESOLUTION_DPI</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_RESOLUTION_DPI   "Settings.Output.Resolution.DPI"   /* Numeric value, like 300, if meaningful */
</programlisting>
<para>
Convenience macro for key that contains a numeric representation of
the resolution, eg: 300.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-RESOLUTION-DPI-X--CAPS" role="macro">
<title>GNOME_PRINT_KEY_RESOLUTION_DPI_X</title>
<indexterm zone="GNOME-PRINT-KEY-RESOLUTION-DPI-X--CAPS"><primary sortas="GNOME_PRINT_KEY_RESOLUTION_DPI_X">GNOME_PRINT_KEY_RESOLUTION_DPI_X</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_RESOLUTION_DPI_X "Settings.Output.Resolution.DPI.X" /* Numeric value */
</programlisting>
<para>
Convenience macro for key that contains a numeric representation of
the X resolution, eg: 300.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-RESOLUTION-DPI-Y--CAPS" role="macro">
<title>GNOME_PRINT_KEY_RESOLUTION_DPI_Y</title>
<indexterm zone="GNOME-PRINT-KEY-RESOLUTION-DPI-Y--CAPS"><primary sortas="GNOME_PRINT_KEY_RESOLUTION_DPI_Y">GNOME_PRINT_KEY_RESOLUTION_DPI_Y</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_RESOLUTION_DPI_Y "Settings.Output.Resolution.DPI.Y" /* Numeric value */
</programlisting>
<para>
Convenience macro for key that contains a numeric representation of
the Y resolution, eg: 300.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-NUM-COPIES--CAPS" role="macro">
<title>GNOME_PRINT_KEY_NUM_COPIES</title>
<indexterm zone="GNOME-PRINT-KEY-NUM-COPIES--CAPS"><primary sortas="GNOME_PRINT_KEY_NUM_COPIES">GNOME_PRINT_KEY_NUM_COPIES</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_NUM_COPIES "Settings.Output.Job.NumCopies" /* Number of copies */
</programlisting>
<para>
Convenience macro for key that contains the number of copies to
output.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-COLLATE--CAPS" role="macro">
<title>GNOME_PRINT_KEY_COLLATE</title>
<indexterm zone="GNOME-PRINT-KEY-COLLATE--CAPS"><primary sortas="GNOME_PRINT_KEY_COLLATE">GNOME_PRINT_KEY_COLLATE</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_COLLATE    "Settings.Output.Job.Collate"   /* Boolean (true|yes|1 false|no|0) */
</programlisting>
<para>
Convenience macro for key that contains a boolean value indicating whether
to collate the copies as they are output.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-MARGIN-LEFT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_MARGIN_LEFT</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-MARGIN-LEFT--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_MARGIN_LEFT">GNOME_PRINT_KEY_PAGE_MARGIN_LEFT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_MARGIN_LEFT   "Settings.Document.Page.Margins.Left"   /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-MARGIN-RIGHT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_MARGIN_RIGHT</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-MARGIN-RIGHT--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_MARGIN_RIGHT">GNOME_PRINT_KEY_PAGE_MARGIN_RIGHT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_MARGIN_RIGHT  "Settings.Document.Page.Margins.Right"  /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-MARGIN-TOP--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_MARGIN_TOP</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-MARGIN-TOP--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_MARGIN_TOP">GNOME_PRINT_KEY_PAGE_MARGIN_TOP</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_MARGIN_TOP    "Settings.Document.Page.Margins.Top"    /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAGE-MARGIN-BOTTOM--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAGE_MARGIN_BOTTOM</title>
<indexterm zone="GNOME-PRINT-KEY-PAGE-MARGIN-BOTTOM--CAPS"><primary sortas="GNOME_PRINT_KEY_PAGE_MARGIN_BOTTOM">GNOME_PRINT_KEY_PAGE_MARGIN_BOTTOM</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAGE_MARGIN_BOTTOM "Settings.Document.Page.Margins.Bottom" /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-MARGIN-LEFT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_MARGIN_LEFT</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-MARGIN-LEFT--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_MARGIN_LEFT">GNOME_PRINT_KEY_PAPER_MARGIN_LEFT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_MARGIN_LEFT   "Settings.Output.Media.Margins.Left"   /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-MARGIN-RIGHT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_MARGIN_RIGHT</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-MARGIN-RIGHT--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_MARGIN_RIGHT">GNOME_PRINT_KEY_PAPER_MARGIN_RIGHT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_MARGIN_RIGHT  "Settings.Output.Media.Margins.Right"  /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-MARGIN-TOP--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_MARGIN_TOP</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-MARGIN-TOP--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_MARGIN_TOP">GNOME_PRINT_KEY_PAPER_MARGIN_TOP</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_MARGIN_TOP    "Settings.Output.Media.Margins.Top"    /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PAPER-MARGIN-BOTTOM--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PAPER_MARGIN_BOTTOM</title>
<indexterm zone="GNOME-PRINT-KEY-PAPER-MARGIN-BOTTOM--CAPS"><primary sortas="GNOME_PRINT_KEY_PAPER_MARGIN_BOTTOM">GNOME_PRINT_KEY_PAPER_MARGIN_BOTTOM</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PAPER_MARGIN_BOTTOM "Settings.Output.Media.Margins.Bottom" /* Length, i.e. use conversion */
</programlisting>
<para>
Ignored by libgnomeprint, but used by libgnomeprintui when populating
margin symbols.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-OUTPUT-FILENAME--CAPS" role="macro">
<title>GNOME_PRINT_KEY_OUTPUT_FILENAME</title>
<indexterm zone="GNOME-PRINT-KEY-OUTPUT-FILENAME--CAPS"><primary sortas="GNOME_PRINT_KEY_OUTPUT_FILENAME">GNOME_PRINT_KEY_OUTPUT_FILENAME</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_OUTPUT_FILENAME "Settings.Output.Job.FileName"          /* Filename used when printing to file. */
</programlisting>
<para>
Convenience macro for the key that contains the name of the file
being used when printing to a file.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-DOCUMENT-NAME--CAPS" role="macro">
<title>GNOME_PRINT_KEY_DOCUMENT_NAME</title>
<indexterm zone="GNOME-PRINT-KEY-DOCUMENT-NAME--CAPS"><primary sortas="GNOME_PRINT_KEY_DOCUMENT_NAME">GNOME_PRINT_KEY_DOCUMENT_NAME</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_DOCUMENT_NAME   "Settings.Document.Name"                /* The name of the document 'Cash flow 2002', `Grandma cookie recipies' */
</programlisting>
<para>
Convenience macro for the key that contains the name of the document
being printed.
</para></refsect2>
<refsect2 id="GNOME-PRINT-KEY-PREFERED-UNIT--CAPS" role="macro">
<title>GNOME_PRINT_KEY_PREFERED_UNIT</title>
<indexterm zone="GNOME-PRINT-KEY-PREFERED-UNIT--CAPS"><primary sortas="GNOME_PRINT_KEY_PREFERED_UNIT">GNOME_PRINT_KEY_PREFERED_UNIT</primary></indexterm><programlisting>#define GNOME_PRINT_KEY_PREFERED_UNIT   "Settings.Document.PreferedUnit"        /* Abbreviation for the preferred unit cm, in,... */
</programlisting>
<para>
Convenience macro for the key that contains the abbreviation for the units
used, eg: cm, in.
</para></refsect2>

</refsect1>




</refentry>
