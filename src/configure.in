-*- mode: m4 -*-
AC_PREREQ(2.52)
AC_INIT(libgnomeprint, 2.18.6,
	http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-print)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

dnl make sure we keep ACLOCAL_FLAGS around for maintainer builds to work
AC_SUBST(ACLOCAL_AMFLAGS, "$ACLOCAL_FLAGS")

AM_MAINTAINER_MODE

IT_PROG_INTLTOOL([0.35.0])

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_STDC_HEADERS
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

# If the source code has changed at all, increment GNOMEPRINT_REVISION
# If any interfaces have been added, removed, or changed, increment GNOMEPRINT_CURRENT, and set GNOMEPRINT_REVISION to 0.
# If any interfaces have been added since the last public release, then increment GNOMEPRINT_AGE.
# If any interfaces have been removed since the last public release, then set GNOMEPRINT_AGE to 0.
GNOMEPRINT_REVISION=0
GNOMEPRINT_CURRENT=1
GNOMEPRINT_AGE=1
AC_SUBST(GNOMEPRINT_REVISION)
AC_SUBST(GNOMEPRINT_CURRENT)
AC_SUBST(GNOMEPRINT_AGE)

AC_DEFINE(WE_ARE_LIBGNOMEPRINT_INTERNALS, 1, [Defined so that we can read our private headers])


dnl ====================================================
dnl FIXME: Does this really belong here?. See bug #80577
dnl ====================================================
AC_CHECK_FUNC(bind_textdomain_codeset,,[AC_CHECK_LIB(intl,bind_textdomain_codeset)])

AC_CHECK_FUNCS(popen pclose)

AC_FUNC_MMAP

dnl =============
dnl Warning flags
dnl =============
dnl GNOME_COMPILE_WARNINGS(maximum)
CFLAGS="$CFLAGS $warning_flags"

# disable for in stable release, re-enable for development series
#CFLAGS="$CFLAGS -DG_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_PIXBUF_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_MULTIHEAD_SAFE"
#CFLAGS="$CFLAGS -DGTK_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGNOME_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DPANGO_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DBONOBO_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DBONOBO_UI_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DLIBGLADE_DISABLE_DEPRECATED"

dnl =======
dnl gettext
dnl =======
GETTEXT_PACKAGE=libgnomeprint-2.2
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package])

AM_GLIB_GNU_GETTEXT

dnl ==========================================
dnl Checks for gtk-doc and docbook-tools
dnl ==========================================
AC_ARG_WITH(html-dir, [  --with-html-dir=PATH    path to installed docs])
if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi
AC_SUBST(HTML_DIR)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
gtk_doc_min_version=0.9
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    IFS="${IFS= 	}"; gtk_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
        cur=$1; shift
        if test -z $min ; then break; fi
        if test -z $cur ; then GTKDOC=false; break; fi
        if test $cur -gt $min ; then break ; fi
        if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gtk_save_IFS"

    if $GTKDOC ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

AC_CHECK_PROG(DB2HTML, db2html, true, false)
AM_CONDITIONAL(HAVE_DOCBOOK, $DB2HTML)

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=yes)

if test x$enable_gtk_doc = xyes ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no 
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)
dnl ==========================================
dnl END: Checks for gtk-doc and docbook-tools
dnl ==========================================

dnl =================
dnl pkg-config checks
dnl =================
glib_modules="glib-2.0 >= 1.3.10 gobject-2.0 >= 1.3.10 gmodule-2.0 >= 1.3.10"
libart_modules="libart-2.0 >= 2.3.7"
pango_modules="pango >= 1.5 pangoft2 >= 1.5"
libxml2_modules="libxml-2.0 >= 2.4.23"
fontconfig_modules="fontconfig >= 1.0"
PKG_CHECK_MODULES(GP_F, [ $glib_modules $libart_modules $pango_modules $libxml2_modules $fontconfig_modules ])
GP_CFLAGS="$GP_F_CFLAGS"
GP_LIBS="$GP_F_LIBS"

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

dnl =================================
dnl Checking for libm
dnl =================================
AC_CHECK_LIBM
if test "x$LIBM" = "x"; then
	AC_MSG_ERROR(You need -lm(mathematic library) for this version of libgnomeprint.)
fi
LDFLAGS="$LDFLAGS $LIBM"

dnl =================================
dnl Checking for freetype2
dnl =================================
FREETYPE_LIBS=
FREETYPE_CFLAGS=
AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
if test "x$FREETYPE_CONFIG" = "xno" ; then
	AC_MSG_ERROR(You need FreeType2 (freetype-devel v 2.x package) for this version of libgnomeprint)
else
	FREETYPE_CFLAGS=`$FREETYPE_CONFIG --cflags`
	FREETYPE_LIBS=`$FREETYPE_CONFIG --libs`
fi

libgnomeprint_save_ldflags=$LDFLAGS
LDFLAGS="$LDFLAGS $FREETYPE_LIBS"

freetype_version=false
AC_MSG_NOTICE([checking for sufficiently new FreeType (at least 2.0.5)])
AC_CHECK_LIB(freetype, FT_Get_Postscript_Name,:,[
    AC_MSG_ERROR(You need FreeType2 (freetype-devel 2.0.5 or greater package) for this version of libgnomeprint)])

LDFLAGS=$libgnomeprint_save_ldflags

dnl =================================
dnl END: Checking for freetype2
dnl =================================

dnl ==========================================
dnl Checking for PAPI libraries
dnl ==========================================
try_papi=yes
AC_ARG_WITH(papi,
	[  --{with,without}-papi   Build the PAPI module],
	if test "x$withval" = "xno"; then
		try_papi=no
	fi
)
if test "x$try_papi" = "xyes"; then
	use_papi=no
	AC_CHECK_LIB(papi, papiJobCreate,
	    [AC_CHECK_HEADER(papi.h, [use_papi=yes; PAPI_LIBS=-lpapi])], use_papi=no)
fi

PAPI_LIBS="$PAPI_LIBS"
AC_SUBST(PAPI_LIBS)
AM_CONDITIONAL(HAVE_PAPI, test x"$use_papi" = "xyes")
dnl ==========================================
dnl END: Checking for PAPI libraries
dnl ==========================================

dnl ==========================================
dnl Checking for CUPS libraries
dnl ==========================================
try_cups=yes
cups_msg=yes
AC_ARG_WITH(cups,
	[  --{with,without}-cups   Build the cups module],
	if test "x$withval" = "xno"; then
		try_cups=false
		cups_msg="Disabled by request"
	fi
)
if test "x$try_cups" = "xyes"; then
	PKG_CHECK_MODULES(CUPS, "gmodule-2.0")
	AC_MSG_CHECKING(for CUPS libraries version >= 1.1.20)
	if cups-config --version --libs > /dev/null 2>&1; then
	    verstxt=`cups-config --version`
	    vers=`echo "$verstxt" | \
		awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
	    if test "$vers" -lt 1001020; then
		    AC_MSG_RESULT(Cups found but the version found is less than 1.1.20)
              cups_msg="Version requirement not satisfied"
	    else
		    CUPS_LIBS="$CUPS_LIBS `cups-config --ldflags` `cups-config --libs`"
		    CUPS_CFLAGS="$CUPS_CFLAGS `cups-config --cflags`"
		    AC_MSG_RESULT(Found version $verstxt)
	    fi

	else
	    AC_MSG_RESULT(["cups not found, make sure cups-config is in the path, or disable the cups backend with --without-cups"])
	    cups_msg="cups-devel not installed (cups-config not found in the PATH)"
	fi
fi

have_libgnomecups=no
if test x"$cups_msg" = "xyes"; then
   libgnomecups_modules="libgnomecups-1.0 >= 0.2.0"
   PKG_CHECK_MODULES(LIBGNOMECUPS, [$libgnomecups_modules], have_libgnomecups=yes)
   CUPS_CFLAGS="$CUPS_CFLAGS $LIBGNOMECUPS_CFLAGS"
   CUPS_LIBS="$CUPS_LIBS $LIBGNOMECUPS_LIBS"
fi

AC_SUBST(CUPS_LIBS)
AC_SUBST(CUPS_CFLAGS)
AM_CONDITIONAL(HAVE_CUPS, test x"$have_libgnomecups" = "xyes")
dnl ==========================================
dnl END: Checking for CUPS libraries
dnl ==========================================

dnl ==========================================
dnl Checks for zlib library.
dnl ==========================================
zlib_found=false
dnl deflateInit is a #define, use deflateEnd instead
AC_CHECK_LIB(z, deflateEnd,
    [ AC_CHECK_HEADER(zlib.h, zlib_found=true) ])

if test "x$zlib_found" = "xfalse"; then
    AC_MSG_ERROR([*** zlib is required])
fi
AC_DEFINE(HAVE_ZLIB, 1, [Define to 1 if you have the <zlib.h> header file.])
Z_LIBS=-lz
AC_SUBST(Z_LIBS)

dnl ==========================================
dnl END: Checks for zlib library.
dnl ==========================================

dnl =========================================================================
dnl SET THE DIRECTORY PATHS. GNOME_PRINT_MODULES_DIR & GNOME_PRINT_DATA_DIR
dnl =========================================================================
GNOME_PRINT_MODULES_DIR='${libdir}/libgnomeprint/${VERSION}/modules'
AC_SUBST(GNOME_PRINT_MODULES_DIR, $GNOME_PRINT_MODULES_DIR)

GNOME_PRINT_DATA_DIR='${datadir}/libgnomeprint/${VERSION}'
AC_SUBST(GNOME_PRINT_DATA_DIR, $GNOME_PRINT_DATA_DIR)
dnl ============================
dnl END: SET THE DIRECTORY PATHS
dnl ============================

dnl ============
dnl BISON & FLEX
dnl ============
AC_PATH_PROG(BISON_PATH, bison, no)
if test x$BISON_PATH = xno; then
	AC_MSG_ERROR(Could not find bison)
fi
AC_PATH_PROG(FLEX_PATH, flex, no)
if test x$FLEX_PATH = xno; then
	AC_MSG_ERROR(Could not find flex)
fi
dnl =================
dnl END: BISON & FLEX
dnl =================

dnl ===============================
dnl LIBGNOMEPRINT_LIBS & CFLAGS
dnl ===============================
LIBGNOMEPRINT_CFLAGS="$GP_CFLAGS $FREETYPE_CFLAGS"
LIBGNOMEPRINT_LIBS="$GP_LIBS $FREETYPE_LIBS $Z_LIBS"
AC_SUBST(LIBGNOMEPRINT_CFLAGS)
AC_SUBST(LIBGNOMEPRINT_LIBS)
dnl ================================
dnl END: LIBGNOMEPRINT_LIBS & CFLAGS
dnl ================================

dnl =======================================
dnl Whether to install the metadata printer
dnl =======================================
metadata_printer=false
AC_ARG_WITH(metadata-printer,
	[  --with-metadata-printer   install the metadata printer used for debuging and building the regression test suite],
	if test "x$withval" = "xyes"; then
		metadata_printer=true
	fi
)
AM_CONDITIONAL(INSTALL_META_PRINTER,$metadata_printer)
dnl ============================================
dnl END: Whether to install the metadata printer
dnl ============================================

dnl ========================
dnl define TOOLS_CFLAGS/LIBS
dnl ========================
PKG_CHECK_MODULES(TOOLS, "glib-2.0 gobject-2.0 libxml-2.0")
AC_SUBST(TOOLS_CFLAGS)
AC_SUBST(TOOLS_LIBS)
dnl =============================
dnl END: define TOOLS_CFLAGS/LIBS
dnl =============================

dnl ========================
dnl Win32
dnl ========================
case $host_os in
cygwin*)
    platform_win32=yes
    os_win32=no
    AC_DEFINE(HAVE_GDI, 1, [Define to 1 if we are going to build the gdi (win32) driver])
    SOPREFIX=cyg
    SOEXT=.dll
    ;;
*mingw*) 
    platform_win32=yes
    os_win32=yes
    AC_DEFINE(HAVE_GDI, 1, [Define to 1 if we are going to build the gdi (win32) driver])
    SOPREFIX=lib
    SOEXT=.dll
    ;;
pw32*)
    platform_win32=yes
    os_win32=no
    AC_DEFINE(HAVE_GDI, 1, [Define to 1 if we are going to build the gdi (win32) driver])
    SOPREFIX=pw
    SOEXT=.dll
    ;;
*)
    platform_win32=no
    os_win32=no
    SOPREFIX=lib
    SOEXT=.so
    ;;
esac
AM_CONDITIONAL(PLATFORM_WIN32, test x"$platform_win32" = "xyes")
AM_CONDITIONAL(OS_WIN32, test x"$os_win32" = "xyes")
AC_SUBST(SOPREFIX)
AC_SUBST(SOEXT)
dnl ========================
dnl END: Win32
dnl ========================

AC_OUTPUT([
Makefile
libgnomeprint-zip
filters/Makefile
po/Makefile.in
libgnomeprint/Makefile
libgnomeprint/gpa/Makefile
libgnomeprint/ttsubset/Makefile
libgnomeprint/transports/Makefile
libgnomeprint/libgnomeprint-2.2.pc
libgnomeprint/libgnomeprint-2.2-uninstalled.pc
libgnomeprint/modules/Makefile
libgnomeprint/modules/cups/Makefile
libgnomeprint/modules/papi/Makefile
libgnomeprint/modules/lpd/Makefile
libgnomeprint/modules/win32/Makefile
data/Makefile
data/models/Makefile
data/models/GNOME-GENERIC-PS.xml.in
data/models/GNOME-PDF-WRITER.xml.in
data/models/GNOME-META.xml
data/printers/Makefile
tests/Makefile
tests/files/Makefile
tests/output/Makefile
tests/tools/Makefile
doc/Makefile
doc/reference/Makefile
])

dnl I don't know a better way to resolve the path which I found
dnl very important to display after configure is ran, if you know
dnl a better way let me know (Chema)
DISPLAY_DATA_DIR=`eval echo $GNOME_PRINT_DATA_DIR`;
DISPLAY_DATA_DIR=`eval echo $DISPLAY_DATA_DIR`;
DISPLAY_DATA_DIR=`eval echo $DISPLAY_DATA_DIR`;

echo "
	Compiler:		${CC}
	Compiler flags:		${CFLAGS}"
if test "x$use_papi" = "xyes"; then
   echo "	PAPI module:		$use_papi    [LIBS: $PAPI_LIBS]"
else
   echo "	PAPI module:		$use_papi"
fi
if test "x$cups_msg" = "xyes"; then
   echo "	Cups module:		$cups_msg    [LIBS: $CUPS_LIBS]"
else
   echo "	Cups module:		$cups_msg"
fi
echo "	Win32 module:		$platform_win32"
echo "	Data dir:   		$DISPLAY_DATA_DIR"
if test x$enable_gtk_doc = xyes ; then
   echo "	Enable gtk-doc:		Yes"
else
   echo "	Enable gtk-doc:		No"
fi
if test x$metadata_printer = xtrue ; then
   echo "	Install meta printer:    Yes"
fi
echo
