# autogenerated from automake.am with automake.py
TOP = ..\..
PRJ_TOP = ..
PACKAGE = gnomeprint
PKG_VER = 2-2-0
!INCLUDE $(TOP)\glib\build\win32\make.msc

DEFINES = -DWE_ARE_LIBGNOMEPRINT_INTERNALS -DENABLE_SVG -DHAVE_GDI \
	-DGNOMELOCALEDIR=\".\" -DGNOME_PRINT_DATA_DIR=\".\" -DGNOME_PRINT_MODULES_DIR=\".\"

INCLUDES = -I $(PRJ_TOP) $(GLIB_CFLAGS) $(PANGO_CFLAGS) $(FREETYPE2_CFLAGS) \
	$(LIBART_CFLAGS) $(LIBXML2_CFLAGS) $(PNG_CFLAGS)

PKG_LINK = \
	$(GLIB_LIBS) $(INTL_LIBS) $(PANGOWIN32_LIBS) \
	$(PANGOFT2_LIBS) $(FREETYPE2_LIBS) $(FONTCONFIG_LIBS) \
	$(LIBART_LIBS) $(LIBXML2_LIBS) \
	$(PNG_LIBS) \
	filters\filters.lib gpa\gpa.lib ttsubset\ttsubset.lib \

SUBDEPS = filters gpa ttsubset 
SUBMODS = transports modules

sub-all-deps: 
	for %d in ($(SUBDEPS)) do nmake -nologo -f makefile.msc sub-one THIS=%d

sub-all-mods: 
	for %d in ($(SUBMODS)) do nmake -nologo -f makefile.msc sub-one THIS=%d

sub-one:
	cd $(THIS)
	nmake -nologo -f makefile.msc SUB_$(THIS)=1
	cd ..

libgnomeprint_2_2_la_LIBADD = \
	$(LIBGNOMEPRINT_LIBS) gpa/libgpa.la ttsubset/libttsubset.la

libgnomeprintinc_HEADERS = \
	$(nox_headers) $(font_headers) libgnomeprint-enum-types.h

CLEANFILES = \
	$(marshal_sources) \
	$(enum_sources) \
	s-enum-types-h \
	s-enum-types-c

font_headers = \
	gnome-font.h gnome-font-face.h gnome-rfont.h

OBJECTS = \
        art_rgba_rgba_affine.obj \
        art_rgba_svp.obj \
        gnome-font-face.obj \
        gnome-font-family.obj \
        gnome-font.obj \
        gnome-fontmap.obj \
        gnome-glyphlist.obj \
        gnome-pgl.obj \
        gnome-print-config.obj \
        gnome-print-encode.obj \
        gnome-print-frgba.obj \
        gnome-print-gdi.obj \
        gnome-print-i18n.obj \
        gnome-print-job.obj \
        gnome-print-meta.obj \
        gnome-print-multipage.obj \
        gnome-print-pango.obj \
        gnome-print-paper.obj \
        gnome-print-pdf-t1.obj \
        gnome-print-pdf-tt.obj \
        gnome-print-pdf.obj \
        gnome-print-ps2.obj \
        gnome-print-rbuf.obj \
        gnome-print-rgbp.obj \
        gnome-print-stdapi.obj \
        gnome-print-svg.obj \
        gnome-print-transport.obj \
        gnome-print-unit.obj \
        gnome-print.obj \
        gnome-rfont.obj \
        gp-gc.obj \
        gp-path.obj \
        libgnomeprint-marshal-main.obj \

nox_headers = \
	gnome-print-config.h \
	gnome-print.h \
	gp-gc.h \
	gnome-print-job.h \
	gnome-print-pango.h \
	gnome-glyphlist.h \
	gnome-pgl.h \
	gnome-print-paper.h \
	gnome-print-unit.h

temp_sources = \
	art_rgb_affine_private.h \
	art_rgba_rgba_affine.c \
	art_rgba_rgba_affine.h \
	art_rgba_svp.c \
	art_rgba_svp.h

EXTRA_DIST = \
	libgnomeprint-2.2.pc.in \
	libgnomeprint-2.2-uninstalled.pc.in \
	libgnomeprint-marshal.list \
	gnome-print-svg.c \
	gnome-print-svg.h

font_sources = \
	gnome-fontmap.c \
	gnome-font.c \
	gnome-font-face.c \
	gnome-rfont.c \
	gnome-font-family.c \
	gnome-font-family.h

lib_LTLIBRARIES = \
	libgnomeprint-2-2.la

font_private_headers = \
	gnome-font-private.h gnome-fontmap.h

DONT_DIST_SOURCE = \
	$(marshal_sources) $(enum_sources)

libgnomeprint_2_2_la_LDFLAGS = \
	-no-undefined

nox_sources = \
	gnome-print-private.h \
	gnome-print.c \
	gnome-print-stdapi.c \
	gnome-print-config.c \
	gnome-print-config.h \
	gnome-print-config-private.h \
	gnome-print-meta.c \
	gnome-print-meta.h \
	gnome-print-job.c \
	gnome-print-multipage.c \
	gnome-print-multipage.h \
	gnome-print-ps2.c \
	gnome-print-ps2.h \
	gnome-print-pdf.c \
	gnome-print-pdf.h \
	gnome-print-pdf-private.h \
	gnome-print-pdf-t1.c \
	gnome-print-pdf-tt.c \
	gnome-print-pango.c \
	gnome-print-module.h \
	gnome-print-rbuf.c \
	gnome-print-rbuf.h \
	gnome-print-frgba.c \
	gnome-print-frgba.h \
	gnome-print-rgbp.c \
	gnome-print-rgbp.h \
	gnome-print-transport.c \
	gnome-print-transport.h \
	gnome-print-i18n.c \
	gnome-print-i18n.h \
	gp-path.c \
	gp-path.h \
	gp-gc.c \
	gnome-glyphlist.c \
	gnome-pgl.c \
	gnome-pgl-private.h \
	gnome-print-encode.c \
	gnome-print-encode.h \
	libgnomeprint-enum-types.c \
	gnome-print-unit.c \
	gnome-print-paper.c

AM_LDFLAGS = \
	-version-info $(GNOMEPRINT_CURRENT):$(GNOMEPRINT_REVISION):$(GNOMEPRINT_AGE)

pkgconfig_DATA = \
	libgnomeprint-2.2.pc

enum_sources = \
	libgnomeprint-enum-types.c libgnomeprint-enum-types.h

libgnomeprintprivateinc_HEADERS = \
	$(nox_private_headers) $(font_private_headers)

pkgconfigdir = \
	$(libdir)/pkgconfig

libgnomeprint-marshal.h: Makefile.am libgnomeprint-marshal.list
	$(GLIB)\gobject\glib-genmarshal --prefix=libgnomeprint_marshal libgnomeprint-marshal.list --header > xgen-gmh \
	&& (fc -s xgen-gmh libgnomeprint-marshal.h || copy xgen-gmh libgnomeprint-marshal.h) \
	&& del xgen-gmh xgen-gmh~

libgnomeprint-marshal.c: Makefile.am libgnomeprint-marshal.list
	$(GLIB)\gobject\glib-genmarshal --prefix=libgnomeprint_marshal libgnomeprint-marshal.list --body > xgen-gmc \
	&& copy xgen-gmc libgnomeprint-marshal.c \
	&& del xgen-gmc xgen-gmc~ 

libgnomeprintincdir = \
	$(includedir)/libgnomeprint-2.2/libgnomeprint

nox_private_headers = \
	gnome-glyphlist-private.h \
	gnome-print-private.h \
	gnome-print-config-private.h \
	gp-gc-private.h

marshal_sources = \
	libgnomeprint-marshal.c libgnomeprint-marshal.h

libgnomeprintprivateincdir = \
	$(libgnomeprintincdir)/private

all : \
	$(PRJ_TOP)\config.h \
	sub-all-deps \
	libgnomeprint-marshal.h \
	libgnomeprint-marshal.c \
	lib$(PACKAGE)-$(PKG_VER).dll \
	sub-all-deps \
	sub-all-mods \


$(PRJ_TOP)\config.h: $(PRJ_TOP)\config.h.win32
	copy $(PRJ_TOP)\config.h.win32 $(PRJ_TOP)\config.h

RESOURCE = $(PACKAGE).res

$(PACKAGE).lib : $(OBJECTS)
	lib /out:$(PACKAGE).lib $(OBJECTS)

lib$(PACKAGE)-$(PKG_VER).dll : $(OBJECTS) gnome-print.def $(PKG_LINK)
	$(CC) $(CFLAGS) -LD -Felib$(PACKAGE)-$(PKG_VER).dll $(OBJECTS) $(PKG_LINK) \
	gdi32.lib winspool.lib user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:gnome-print.def

$(PACKAGE).exe : $(OBJECTS) $(PACKAGE).def $(PACKAGE).res
	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(PACKAGE).res $(OBJECTS) $(PKG_LINK) \
	user32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS) /def:$(PACKAGE).def

.c.obj :
	$(CC) $(CFLAGS) -GD -c $(PKG_CFLAGS) $<
